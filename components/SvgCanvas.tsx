"use client";

import Dragable from "./Dragable";
import Grid from "./Grid";

import { useState } from "react";
import Centered from "./Centered";
import { useCanvasContext } from "./CanvasContext";
import Shape from "./Shape";

const SvgCanvas = () => {
  const {
    state: { size, gridCounts, gridCountI },
    dispatch,
  } = useCanvasContext();

  const step = size / gridCounts[gridCountI]!;
  const viewBox = (w: number) => `${w * -0.5} ${w * -0.5} ${w} ${w}`;

  const [paths, setPaths] = useState({
    head: "M 0, 0 a 25,25 0 1,1 50,0 a 25,25 0 1,1 -50,0",
    eye: "M 0, 0 a 5,5 0 1,1 10,0 a 5,5 0 1,1 -10,0",
    body: "m -7.62577,60.820004 c 0.14632,0.16846 6.72506,14.0682 7.87445,20.00498 l 7.52512,-0.031 c 2.54982,-27.503188 0.38083,-41.524148 0.99374,-43.511552 0.28398,-0.920739 0.83615,-1.677634 1.03094,-1.910477 3.85801,2.925334 9.45479,7.728685 12.84832,9.015987 1.79064,0.782748 3.71781,-1.851594 3.34346,-3.566191 -5.13246,-8.11428 -10.29622,-18.70837 -17.43873,-26.827303 -2.2827,-2.59488 -17.51366,-3.035995 -17.51366,-3.035995 0,0 -15.230139,0.441344 -17.513657,3.035985 -7.142509,8.118933 -12.306266,18.713023 -17.438729,26.827303 -0.374351,1.714597 1.552823,4.348939 3.343465,3.566191 3.393533,-1.287302 8.990304,-6.090653 12.848312,-9.015987 0.194791,0.232843 0.746958,0.989738 1.030944,1.910477 0.612902,1.987404 -1.556078,16.00836 0.993738,43.511552 l 7.525127,0.031 c 1.14938,-5.93678 7.72812,-19.83652 7.87445,-20.00498 0.14633,-0.16832 1.33635,-0.29558 1.33635,-0.29558 0,0 1.19003,0.12727 1.33636,0.29559 z",
    sword:
      "M 51.124 -38.632 c -0.084 0.264 -0.232 0.52 -0.388 0.688 c -0.06 0.064 -6.348 5.46 -13.968 11.996 l -13.86 11.876 l 2.58 2.588 c 2.224 2.224 2.596 2.616 2.684 2.808 c 0.14 0.304 0.192 0.648 0.144 0.976 c -0.08 0.576 0.076 0.4 -3.572 4.052 c -2.92 2.924 -3.352 3.348 -3.568 3.452 c -0.336 0.168 -0.7 0.224 -1.04 0.168 c -0.564 -0.096 -0.448 0.004 -3.676 -3.216 l -2.96 -2.952 l -0.96 0.8 l -0.96 0.8 l -0.128 0.392 c -0.312 0.976 -0.804 1.756 -1.58 2.508 c -1.796 1.748 -4.284 2.176 -6.452 1.108 c -0.648 -0.32 -1.048 -0.604 -1.576 -1.108 c -1.336 -1.292 -2.012 -3.076 -1.804 -4.784 c 0.156 -1.256 0.716 -2.42 1.64 -3.376 c 0.756 -0.784 1.536 -1.28 2.524 -1.596 l 0.392 -0.128 l 0.8 -0.96 l 0.8 -0.96 l -2.952 -2.96 c -2.628 -2.636 -2.964 -2.988 -3.064 -3.2 c -0.22 -0.48 -0.228 -0.956 -0.02 -1.46 c 0.084 -0.196 0.436 -0.564 3.432 -3.568 c 2.936 -2.94 3.372 -3.364 3.584 -3.468 c 0.316 -0.156 0.66 -0.208 1.004 -0.16 c 0.564 0.08 0.472 -0 3.304 2.828 l 2.588 2.576 l 11.876 -13.852 c 6.532 -7.62 11.952 -13.924 12.044 -14.004 c 0.204 -0.184 0.416 -0.296 0.716 -0.372 c 0.196 -0.052 0.964 -0.06 5.616 -0.06 c 5.164 -0 5.4 0.004 5.632 0.076 c 0.328 0.1 0.552 0.24 0.772 0.476 c 0.22 0.232 0.364 0.508 0.428 0.8 c 0.032 0.152 0.044 1.756 0.04 5.6 c 0 5.1 -0.004 5.4 -0.072 5.616 Z",
    shield: "M 0 0 C -25 0 -25 -45 -25 -50 L 25 -50 C 25 -45 25 0 0 0",
  } satisfies Record<string, string>);

  return (
    <svg
      viewBox={viewBox(size)}
      className={`aspect-square w-[${size}px] rounded-lg border border-accent-foreground`}
    >
      <rect
        className="h-full w-full fill-accent-foreground"
        x={-size * 0.5}
        y={-size * 0.5}
      ></rect>
      <Grid />

      <Shape d={paths.body} initial={{ position: { x: 0, y: 30 } }} />
      <Shape d={paths.head} initial={{ position: { x: 0, y: -25 } }} />
      <Shape d={paths.eye} initial={{ position: { x: -12, y: -20 } }} />
      <Shape d={paths.eye} initial={{ position: { x: 12, y: -20 } }} />
      <Shape d={paths.sword} initial={{ position: { x: 50, y: 5 } }} />
      <Shape d={paths.shield} initial={{ position: { x: -35, y: 25 } }} />
    </svg>
  );
};

export default SvgCanvas;
